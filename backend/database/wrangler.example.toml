#:schema node_modules/wrangler/config-schema.json
name = "database"
main = "src/index.ts"
compatibility_date = "2024-07-01"
compatibility_flags = ["nodejs_compat"]

# Bind another Worker service. Use this binding to call another Worker without network overhead.
# Docs: https://developers.cloudflare.com/workers/wrangler/configuration/#service-bindings
services = [{ binding = "STORAGE", service = "storage" }]

# Variable bindings. These are arbitrary, plaintext strings (similar to environment variables)
# Docs:
# - https://developers.cloudflare.com/workers/wrangler/configuration/#environment-variables
# Note: Use secrets to store sensitive data.
# - https://developers.cloudflare.com/workers/configuration/secrets/
#
# Set:  - STORAGE_WORKER_URL after deploying worker locally or on Cloudflare
#       - CLOUDFLARE_ACCOUNT_ID after deploying worker on Cloudflare
#       - CLOUDFLARE_DATABASE_ID after deploying the worker locally or on Cloudflare.
# Set AUTH_KEY to be the same as AUTH_KEY in /backend/storage/wrangler.toml.
[vars]
AUTH_KEY = ""
OPENAI_KEY = ""
AZURE_PROXY_ENDPOINT = ""
STORAGE_WORKER_URL = ""
CLOUDFLARE_ACCOUNT_ID = ""
CLOUDFLARE_DATABASE_ID = ""
# Set CLOUDFLARE_API_TOKEN using 'secrets'. Ignore this.


# Bind a D1 database. D1 is Cloudflareâ€™s native serverless SQL database.
# Docs: https://developers.cloudflare.com/workers/wrangler/configuration/#d1-databases
[[d1_databases]]
binding = "DB"
database_name = ""
database_id = ""